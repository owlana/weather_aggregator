name: Weather
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/weather-sources
    metadata:
      groupName: Weather
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Получение списка источников'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"sources":[{"title":"Tomorrow","code":"tomorrow"},{"title":"WeatherAPI","code":"weatherApi"}]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/weather/{source}'
    metadata:
      groupName: Weather
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Получение погоды из источника по городу'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      source:
        name: source
        description: Источник
        required: true
        example: tomorrow
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      source: tomorrow
    queryParameters:
      city:
        name: city
        description: 'Название города'
        required: true
        example: Moscow
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      city: Moscow
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"weather":{"temperature":12.5,"humidity":74,"pressure":995.55}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
      -
        status: 400
        content: '{"message": "Weather source not found"}'
        headers: []
        description: 'Wrong source'
        custom: []
      -
        status: 422
        content: '{"message": "The city field is required.", "errors": {"city": ["The city field is required."]}}'
        headers: []
        description: 'Validation failed'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/weather-aggregate
    metadata:
      groupName: Weather
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Получение среднего показателя погоды по всем источникам'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      city:
        name: city
        description: 'Название города'
        required: true
        example: Moscow
        type: string
        enumValues: []
        custom: []
    cleanQueryParameters:
      city: Moscow
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"weather":{"temperature":12.75,"humidity":78,"pressure":1004.28}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
      -
        status: 422
        content: '{"message": "The city field is required.", "errors": {"city": ["The city field is required."]}}'
        headers: []
        description: 'Validation failed'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
